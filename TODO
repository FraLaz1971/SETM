/****************************************
* @date:    2019-09-24
* @author:  Francesco Lazzarotto
* @email:   francesco.lazzarotto@inaf.it
*****************************************/

### TODO: creating the following bash script procedures
- convert dds tm file to ccsds binary (dds2ccsds.sh)
- convert ccsds tm file to dds binary (ccsds2pus.sh)
- interpret dds header data, ccsds header data, pus secondary header
- translate binary tm files into xml
- translate ccsds raw source binary files into xml
- create a csv/tsv file that is a list of hex string packets
  dds2hexstr
  input: dds packets binary file
  output: stdout (or csv file) containing a table with the following columns:
  pktid, ddsheadhex, ccsdshex
  where pktid = a progressive n., id of the processed packet (int 4 BYTES)
  ddsheadhex = an ascii hex string containing the ascii hex values of the dds header (string(36))
  ccsdshex = an ascii hex string containing the ascii hex values of the packet, ccsds HD + DFH + DF (string(8192))
  -   dds2hexstr_file (same as dds2hexstr but outputs to csv file)
  -   auto_dds2hexstr (same as dds2hexstr but takes inputs from a conf file)
########################
23/10/2019 TODO: complete, test & check time fields conversion to iso timestamp
########################
23/10/2019 TODO: implement html_lib for creating html index files
for presenting data products, then this html can be dynamically
generated by javascript functions.
########################
24/10/2019 TODO: implement png image metadata extraction and 
read/write on conf file (csv/xml)
########################
implement the conversion
among INAF csv format
to FITS, PDS4 & CDS
########################
#the following are FITS table keywords (=metadata)
#to be saved to implement binary table
    TFIELDS - number of fields or columns in the table
    NAXIS2  - number of rows in the table
    TTYPEn  - for each column (n ranges from 1 to TFIELDS) gives the name of the column
    TFORMn  - the data type of the column
    TUNITn  - the physical units of the column (optional)
###
#this have correspondance with INAF csv format for 2D data ascii tables

    N_REMS      - number of comment rows in the csv file
    N_FIELDS    - number of fields/columns in each (same as TFIELDS in FITS)
    N_ROWS      - number of data records/rows in the file
    C_NAME_n    - name of data contained in column number n (e.g. time or temperature, or pressure)
    C_UNIT_n    - physical unit of the data in column n (e.g seconds or degrees or pascal)
    C_TYPE_n    - data type of the field n (int|float|string)
    C_SIZE_n    - size in BYTES of

#e.g.
N_REMS, 4
N_FIELDS, 3
N_ROWS, 10
C_NAME_0, Time
C_UNIT_0, s
C_TYPE_0, int
C_SIZE_0, 4
C_NAME_1, temp1
C_UNIT_1, degC
C_TYPE_1, int
C_SIZE_1, 2
...
...
...
#####
TODO!! handle the extraction of metadata n. of fields when there are records with different
number of fields!! (separate in different tables/files) with the same n. of fields x record
#####
# dds2hexstrings.sh ---> takes as input dds binary tm file and gives ccsds hexstrings as ouptut (ascii hex strings on the stdout
each line is a record corresponding to a single ccsds packet)
OK but now implement on giving in output also the dds header and the scos2000 (reconstruct) header, this will be helpful
to use the ESAC SGS tool to verify data http://bepicolombo.esac.esa.int/packetanalyzer/login
http://bepicolombo.esac.esa.int/packetanalyzer/#!Packet%20Decoder
### TODO 15/10/2019
to be implemented cutddspackets.sh <ddsfile> <npackets>
gives a file of only <npackets>
